#!/usr/bin/python3
""" Find peak in a list of unsorted integers """


def find_peak(list_of_integers):
    """Function finds the peak in an undotted list"""
    lin = list_of_integers
    size = len(lin)

    if size == 0:
        return None

    if size is 1:
        return lin[0]

    return recurse(lin, 0, size - 1)



def recurse(lin, left, right):
    """ Tge recursive component """
    mid = int((left + right) / 2)

    if left > right:
        return lin[mid]
    
    loi = lin
    if (mid == 0 or lin[mid] > loi[mid - 1]):
        if (mid == len(loi) - 1 or loi[mid] > loi[mid + 1]):
            return loi[mid]

    # recurse left
    elif (mid > 0) and loi[mid - 1] > loi[mid]:
        return recurse(loi, left, mid - 1)
    else:  # recurse right
        return recurse(loi, mid + 1, right)
